{"version":3,"sources":["components/ContactList/ContactList.module.css","redux/actions.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/App/App.jsx","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","shortid","require","addContact","createAction","data","payload","id","generate","deleteContact","filterContact","ContactList","dispatch","useDispatch","contacts","useSelector","state","filter","items","normalizedFilter","toLowerCase","contact","name","includes","className","s","table","map","number","type","onClick","onDeleteContact","ContactForm","useState","setName","setNumber","handleInputChange","e","currentTarget","value","form","onSubmit","preventDefault","trim","alert","label","input","pattern","title","onChange","Filter","event","target","App","itemContactReducer","createReducer","action","search","find","el","filtered","filterContactReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.eb307d4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"ContactList_table__BvK4H\"};","import { createAction } from '@reduxjs/toolkit';\nconst shortid = require('shortid');\n\nexport const addContact = createAction('contacts/add', data => ({\n  payload: {\n    ...data,\n    id: shortid.generate(),\n  },\n}));\n\nexport const deleteContact = createAction('contacts/delete');\n\nexport const filterContact = createAction('contacts/changeFilter');\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/actions';\nimport s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  const getContactList = state => {\n    const { filter, items } = state.contacts;\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  const contacts = useSelector(getContactList);\n\n  return (\n    <table className={s.table}>\n      <tbody>\n        {contacts.map(({ name, number, id }) => (\n          <tr key={id}>\n            <td>{name}</td>\n            <td>{number}</td>\n            <td>\n              <button type=\"button\" onClick={() => onDeleteContact(id)}>\n                del\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\nexport default ContactList;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/actions';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name.trim() === '' || number.trim() === '') {\n      alert('Fill all fields!');\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          onChange={handleInputChange}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/actions';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilter = event => dispatch(filterContact(event.target.value));\n\n  return (\n    <label>\n      <input type=\"text\" name=\"filter\" onChange={onFilter} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import './App.css';\nimport ContactList from '../ContactList/ContactList';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <p className=\"App-find\">Find contacts by name</p>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nimport { addContact, deleteContact, filterContact } from './actions';\n\nconst itemContactReducer = createReducer([], {\n  [addContact.type]: (state, action) => {\n    const search = state.find(\n      el => el.name.toLowerCase() === action.payload.name.toLowerCase(),\n    );\n    if (search) {\n      alert(`${search.name} is already in contacts.`);\n      return;\n    }\n    return [...state, action.payload];\n  },\n  [deleteContact.type]: (state, action) => {\n    const filtered = state.filter(el => el.id !== action.payload);\n    return [...filtered];\n  },\n});\n\nconst filterContactReducer = createReducer('', {\n  [filterContact.type]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  items: itemContactReducer,\n  filter: filterContactReducer,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactReducer from './reducers';\n\n//*state*//\n// {\n//   contacts: {\n//     items: [],\n//     filter: ''\n//   }\n// }\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\n  },\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nconst persistor = persistStore(store);\n\nconst persistore = { store, persistor };\n\nexport default persistore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App/App';\n\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3fIF9\",\"label\":\"ContactForm_label__1mX-Y\",\"input\":\"ContactForm_input__3WTKM\"};"],"sourceRoot":""}